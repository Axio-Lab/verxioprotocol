{"version":3,"sources":["../src/components/verxio/CreateLoyaltyProgramForm.tsx","../src/lib/utils.ts","../src/components/ui/label.tsx","../src/components/ui/form.tsx","../src/components/verxio/base/VerxioForm.tsx","../src/components/verxio/base/VerxioFormSection.tsx","../src/components/verxio/base/VerxioFormField.tsx","../src/components/ui/input.tsx","../src/components/ui/button.tsx","../src/components/verxio/UpdateLoyaltyProgramForm.tsx","../src/components/verxio/IssueLoyaltyPassForm.tsx","../src/components/verxio/ApproveTransferForm.tsx","../src/components/verxio/MessagingForm.tsx","../src/components/verxio/RevokeLoyaltyPointsForm.tsx","../src/components/verxio/GiftLoyaltyPointsForm.tsx","../src/components/verxio/GetAssetDataForm.tsx","../src/components/verxio/GetProgramDetailsForm.tsx","../src/components/verxio/AwardLoyaltyPointsForm.tsx","../src/components/verxio/BroadcastsForm.tsx","../src/components/ui/alert.tsx"],"names":["cn","inputs","twMerge","clsx","Label","j","_a","ref","_b","className","props","__objRest","__spreadValues","Form","FormProvider","FormFieldContext","FormField","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","FormItem","FormLabel","error","formItemId","FormControl","formDescriptionId","formMessageId","Slot","FormDescription","FormMessage","children","body","VerxioForm","form","onSubmit","VerxioFormSection","title","description","VerxioFormField","name","label","Input","type","le","buttonVariants","cva","Button","variant","size","asChild","ne","actionSchema","tierSchema","formSchema","CreateLoyaltyProgramForm","context","providedSigner","onSuccess","onError","createdProgram","setCreatedProgram","useState","signer","generateSigner","useForm","zodResolver","data","validationResult","programData","tier","action","result","createLoyaltyProgram","errorMessage","handleAddAction","actions","handleRemoveAction","index","_","i","handleAddTier","tiers","handleRemoveTier","handleAddReward","tierIndex","newTiers","__spreadProps","handleRemoveReward","rewardIndex","e","reward","C","UpdateLoyaltyProgramForm","updateResult","setUpdateResult","updateData","publicKey","updateLoyaltyProgram","z","IssueLoyaltyPassForm","issuedPass","setIssuedPass","passData","issueLoyaltyPass","M","ApproveTransferForm","isSuccess","setIsSuccess","approveTransfer","T","MessagingForm","messageResult","setMessageResult","messageData","sendMessage","L","RevokeLoyaltyPointsForm","revokeResult","setRevokeResult","revokeData","revokeLoyaltyPoints","R","GiftLoyaltyPointsForm","giftResult","setGiftResult","giftData","giftLoyaltyPoints","GetAssetDataForm","assetData","setAssetData","getAssetData","broadcast","message","O","GetProgramDetailsForm","programDetails","setProgramDetails","getProgramDetails","points","k","AwardLoyaltyPointsForm","awardResult","setAwardResult","awardData","awardLoyaltyPoints","B","BroadcastsForm","broadcastResult","setBroadcastResult","broadcastData","sendBroadcast","alertVariants","Alert","Y","AlertTitle","AlertDescription"],"mappings":"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","file":"index.mjs","sourcesContent":["'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { createLoyaltyProgram, VerxioContext } from '@verxioprotocol/core'\nimport { generateSigner, KeypairSigner } from '@metaplex-foundation/umi'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { useState } from 'react'\n\nconst actionSchema = z.object({\n  name: z.string().min(1, 'Action name is required'),\n  points: z.number().min(0, 'Points must be positive'),\n})\n\nconst tierSchema = z.object({\n  name: z.string().min(1, 'Tier name is required'),\n  points: z.number().min(0, 'Points must be positive'),\n  rewards: z.array(z.string()).min(1, 'At least one reward is required'),\n})\n\nconst formSchema = z.object({\n  programName: z.string().min(1, 'Program name is required'),\n  metadataUri: z.string().url('Must be a valid URL'),\n  organizationName: z.string().min(1, 'Organization name is required'),\n  brandColor: z.string().regex(/^#[0-9A-Fa-f]{6}$/, 'Must be a valid hex color'),\n  pointsPerAction: z.array(actionSchema).min(1, 'At least one action is required'),\n  tiers: z.array(tierSchema).min(1, 'At least one tier is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface CreateLoyaltyProgramResult {\n  collection: KeypairSigner\n  signature: string\n  updateAuthority?: KeypairSigner\n}\n\ninterface CreateLoyaltyProgramFormProps {\n  context: VerxioContext\n  signer?: KeypairSigner\n  onSuccess?: (result: CreateLoyaltyProgramResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function CreateLoyaltyProgramForm({ \n  context,\n  signer: providedSigner,\n  onSuccess,\n  onError \n}: CreateLoyaltyProgramFormProps) {\n  const [createdProgram, setCreatedProgram] = useState<CreateLoyaltyProgramResult | null>(null)\n  const signer = providedSigner || generateSigner(context.umi)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      programName: '',\n      metadataUri: '',\n      organizationName: '',\n      brandColor: '#00adef',\n      pointsPerAction: [\n        { name: '', points: 0 },\n      ],\n      tiers: [\n        { \n          name: '', \n          points: 0, \n          rewards: ['']\n        },\n      ],\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      // Format data for createLoyaltyProgram\n      const programData = {\n        loyaltyProgramName: data.programName,\n        metadataUri: data.metadataUri,\n        programAuthority: context.programAuthority,\n        updateAuthority: signer,\n        metadata: {\n          organizationName: data.organizationName,\n          brandColor: data.brandColor,\n        },\n        tiers: data.tiers.map(tier => ({\n          name: tier.name,\n          xpRequired: tier.points,\n          rewards: tier.rewards,\n        })),\n        pointsPerAction: Object.fromEntries(\n          data.pointsPerAction.map(action => [action.name, action.points])\n        ),\n      }\n      \n      console.log('programData', programData)\n      const result = await createLoyaltyProgram(context, programData)\n      setCreatedProgram(result)\n      onSuccess?.(result)\n      \n      // Reset form after successful creation\n      form.reset()\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while creating the loyalty program'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  const handleAddAction = () => {\n    const actions = form.getValues('pointsPerAction')\n    form.setValue('pointsPerAction', [...actions, { name: '', points: 0 }])\n  }\n\n  const handleRemoveAction = (index: number) => {\n    const actions = form.getValues('pointsPerAction')\n    if (actions.length > 1) {\n      form.setValue('pointsPerAction', actions.filter((_, i) => i !== index))\n    }\n  }\n\n  const handleAddTier = () => {\n    const tiers = form.getValues('tiers')\n    form.setValue('tiers', [\n      ...tiers,\n      { \n        name: '', \n        points: 0, \n        rewards: [''] \n      },\n    ])\n  }\n\n  const handleRemoveTier = (index: number) => {\n    const tiers = form.getValues('tiers')\n    if (tiers.length > 1) {\n      form.setValue('tiers', tiers.filter((_, i) => i !== index))\n    }\n  }\n\n  const handleAddReward = (tierIndex: number) => {\n    const tiers = form.getValues('tiers')\n    const newTiers = [...tiers]\n    newTiers[tierIndex] = {\n      ...newTiers[tierIndex],\n      rewards: [...newTiers[tierIndex].rewards, '']\n    }\n    form.setValue('tiers', newTiers)\n  }\n\n  const handleRemoveReward = (tierIndex: number, rewardIndex: number) => {\n    const tiers = form.getValues('tiers')\n    const newTiers = [...tiers]\n    if (newTiers[tierIndex].rewards.length > 1) {\n      newTiers[tierIndex] = {\n        ...newTiers[tierIndex],\n        rewards: newTiers[tierIndex].rewards.filter((_, i) => i !== rewardIndex)\n      }\n      form.setValue('tiers', newTiers)\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Basic Information\"\n          description=\"Enter the basic details of your loyalty program\"\n        >\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <VerxioFormField\n              form={form}\n              name=\"programName\"\n              label=\"Program Name\"\n              description=\"The name of your loyalty program\"\n            >\n              <Input \n                placeholder=\"e.g., Coffee Rewards Program\" \n                onChange={(e) => form.setValue('programName', e.target.value)}\n              />\n            </VerxioFormField>\n\n            <VerxioFormField\n              form={form}\n              name=\"organizationName\"\n              label=\"Organization Name\"\n              description=\"Your organization's name\"\n            >\n              <Input \n                placeholder=\"e.g., Coffee Brew Co.\" \n                onChange={(e) => form.setValue('organizationName', e.target.value)}\n              />\n            </VerxioFormField>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"md:col-span-2\">\n              <VerxioFormField\n                form={form}\n                name=\"metadataUri\"\n                label=\"Metadata URI\"\n                description=\"The URI where your program metadata is stored\"\n              >\n                <Input \n                  placeholder=\"https://arweave.net/...\" \n                  onChange={(e) => form.setValue('metadataUri', e.target.value)}\n                />\n              </VerxioFormField>\n            </div>\n\n            <VerxioFormField\n              form={form}\n              name=\"brandColor\"\n              label=\"Brand Color\"\n              description=\"Your brand's primary color\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Input \n                  type=\"color\" \n                  className=\"w-14 h-14 p-1\"\n                  value={form.watch('brandColor')}\n                  onChange={(e) => form.setValue('brandColor', e.target.value)}\n                />\n                <Input \n                  type=\"text\"\n                  value={form.watch('brandColor')}\n                  onChange={(e) => form.setValue('brandColor', e.target.value)}\n                />\n              </div>\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Points Per Action\"\n          description=\"Configure the actions that earn points and their values\"\n        >\n          <div className=\"space-y-6\">\n            {form.watch('pointsPerAction').map((_, index) => (\n              <div key={index} className=\"flex items-end gap-4\">\n                <div className=\"flex-1\">\n                  <VerxioFormField\n                    form={form}\n                    name={`pointsPerAction.${index}.name`}\n                    label=\"Action Name\"\n                    description=\"Name of the action that earns points\"\n                  >\n                    <Input \n                      placeholder=\"e.g., purchase, review, referral\"\n                      onChange={(e) => {\n                        const actions = form.getValues('pointsPerAction')\n                        actions[index].name = e.target.value\n                        form.setValue('pointsPerAction', actions)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n                <div className=\"flex-1\">\n                  <VerxioFormField\n                    form={form}\n                    name={`pointsPerAction.${index}.points`}\n                    label=\"Points\"\n                    description=\"Points awarded for this action\"\n                  >\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      onChange={(e) => {\n                        const actions = form.getValues('pointsPerAction')\n                        actions[index].points = parseInt(e.target.value) || 0\n                        form.setValue('pointsPerAction', actions)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n                {form.watch('pointsPerAction').length > 1 && (\n                  <Button\n                    type=\"button\"\n                    variant=\"destructive\"\n                    onClick={() => handleRemoveAction(index)}\n                  >\n                    Remove\n                  </Button>\n                )}\n              </div>\n            ))}\n            <Button type=\"button\" variant=\"outline\" onClick={handleAddAction}>\n              Add Action\n            </Button>\n          </div>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Reward Tiers\"\n          description=\"Define the tiers and rewards for your loyalty program\"\n        >\n          <div className=\"space-y-6\">\n            {form.watch('tiers').map((tier, tierIndex) => (\n              <div key={tierIndex} className=\"p-6 bg-gradient-to-br from-slate-50 to-slate-100 border border-slate-200 rounded-xl space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center text-white font-bold text-sm\">\n                      {tierIndex + 1}\n                    </div>\n                    <h5 className=\"font-semibold\">Tier {tierIndex + 1}</h5>\n                  </div>\n                  {form.watch('tiers').length > 1 && (\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleRemoveTier(tierIndex)}\n                      className=\"text-red-500 hover:text-red-600 hover:bg-red-50\"\n                    >\n                      Remove Tier\n                    </Button>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <VerxioFormField\n                    form={form}\n                    name={`tiers.${tierIndex}.name`}\n                    label=\"Tier Name\"\n                    description=\"Name of the loyalty tier\"\n                  >\n                    <Input \n                      placeholder=\"e.g., Bronze\"\n                      onChange={(e) => {\n                        const tiers = form.getValues('tiers')\n                        tiers[tierIndex].name = e.target.value\n                        form.setValue('tiers', tiers)\n                      }}\n                    />\n                  </VerxioFormField>\n\n                  <VerxioFormField\n                    form={form}\n                    name={`tiers.${tierIndex}.points`}\n                    label=\"Required Points\"\n                    description=\"Points needed to reach this tier\"\n                  >\n                    <Input \n                      type=\"number\" \n                      min={0}\n                      onChange={(e) => {\n                        const tiers = form.getValues('tiers')\n                        tiers[tierIndex].points = parseInt(e.target.value) || 0\n                        form.setValue('tiers', tiers)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h6 className=\"font-medium\">Rewards</h6>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleAddReward(tierIndex)}\n                    >\n                      Add Reward\n                    </Button>\n                  </div>\n\n                  {tier.rewards.map((_, rewardIndex) => (\n                    <div key={rewardIndex} className=\"flex items-end gap-4\">\n                      <div className=\"flex-1\">\n                        <VerxioFormField\n                          form={form}\n                          name={`tiers.${tierIndex}.rewards.${rewardIndex}`}\n                          label=\"\"\n                          description=\"Reward for this tier\"\n                        >\n                          <Input \n                            placeholder=\"e.g., 10% cashback\"\n                            value={tier.rewards[rewardIndex]}\n                            onChange={(e) => {\n                              const tiers = form.getValues('tiers')\n                              const newTiers = [...tiers]\n                              newTiers[tierIndex] = {\n                                ...newTiers[tierIndex],\n                                rewards: newTiers[tierIndex].rewards.map((reward, i) => \n                                  i === rewardIndex ? e.target.value : reward\n                                )\n                              }\n                              form.setValue('tiers', newTiers)\n                            }}\n                          />\n                        </VerxioFormField>\n                      </div>\n                      {tier.rewards.length > 1 && (\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleRemoveReward(tierIndex, rewardIndex)}\n                          className=\"text-red-500 hover:text-red-600 hover:bg-red-50\"\n                        >\n                          Remove\n                        </Button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n            <Button type=\"button\" variant=\"outline\" onClick={handleAddTier}>\n              Add Tier\n            </Button>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Creating Program...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Create Program\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {createdProgram && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Program Created Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Transaction Details */}\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Transaction Signature:</span></p>\n                <p className=\"font-mono text-sm break-all\">{createdProgram.signature}</p>\n              </div>\n            </div>\n\n            {/* Collection Details */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Collection Details</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Collection Public Key:</span></p>\n                <p className=\"font-mono text-sm break-all\">{createdProgram.collection.publicKey}</p>\n                {createdProgram.updateAuthority && (\n                  <>\n                    <p><span className=\"font-medium\">Update Authority Public Key:</span></p>\n                    <p className=\"font-mono text-sm break-all\">{createdProgram.updateAuthority.publicKey}</p>\n                  </>\n                )}\n              </div>\n            </div>\n\n            {/* Next Steps */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Next Steps</h3>\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <p className=\"text-blue-800\">\n                  Your loyalty program has been created successfully! You can now:\n                </p>\n                <ul className=\"mt-2 list-disc list-inside text-blue-700\">\n                  <li>Use the collection address to create loyalty passes</li>\n                  <li>Update program details using the update authority</li>\n                  <li>View program details using the GetProgramDetails form</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport bs58 from \"bs58\"\nimport { fromWeb3JsKeypair } from '@metaplex-foundation/umi-web3js-adapters'\nimport { Keypair as Web3JsKeypair } from '@solana/web3.js'\n\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} \n\nexport function convertSecretKeyToKeypair(secretKey: string) {\n  try {\n    const secretKeyBytes = bs58.decode(secretKey)\n    const keypair = Web3JsKeypair.fromSecretKey(secretKeyBytes)\n    return fromWeb3JsKeypair(keypair)\n  } catch (error) {\n    console.error('Error converting secret key:', error)\n    throw new Error('Invalid secret key format')\n  }\n}","'use client'\n\nimport * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\nimport { cn } from '@/lib/utils'\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => (\n    <LabelPrimitive.Root\n    ref={ref}\n      className={cn(\n      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n      className\n      )}\n      {...props}\n    />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n} ","import { ReactNode } from 'react'\nimport { Form } from '@/components/ui/form'\nimport { UseFormReturn } from 'react-hook-form'\nimport { cn } from '@/lib/utils'\n\ninterface VerxioFormProps<T extends Record<string, any>> {\n  form: UseFormReturn<T>\n  onSubmit: (data: T) => void\n  children: ReactNode\n  className?: string\n}\n\nexport function VerxioForm<T extends Record<string, any>>({\n  form,\n  onSubmit,\n  children,\n  className,\n}: VerxioFormProps<T>) {\n  return (\n    <Form {...form}>\n      <form \n        onSubmit={form.handleSubmit(onSubmit)} \n        className={cn(\n          \"w-full max-w-4xl mx-auto p-6 space-y-8 bg-white rounded-xl shadow-lg\",\n          \"border border-gray-100\",\n          className\n        )}\n      >\n        {children}\n      </form>\n    </Form>\n  )\n} ","import { ReactNode } from 'react'\n\ninterface VerxioFormSectionProps {\n  title: string\n  description?: string\n  children: ReactNode\n  className?: string\n}\n\nexport function VerxioFormSection({\n  title,\n  description,\n  children,\n  className,\n}: VerxioFormSectionProps) {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <h3 className=\"text-xl font-semibold text-gray-900\">{title}</h3>\n        {description && (\n          <p className=\"text-sm text-gray-500\">{description}</p>\n        )}\n      </div>\n      <div className={className}>{children}</div>\n    </div>\n  )\n} ","import { ReactNode } from 'react'\nimport {\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { UseFormReturn, Path } from 'react-hook-form'\n\ninterface VerxioFormFieldProps<T extends Record<string, any>> {\n  form: UseFormReturn<T>\n  name: Path<T>\n  label: string\n  description?: string\n  children: ReactNode\n  className?: string\n}\n\nexport function VerxioFormField<T extends Record<string, any>>({\n  form,\n  name,\n  label,\n  description,\n  children,\n  className,\n}: VerxioFormFieldProps<T>) {\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={() => (\n        <FormItem className={className}>\n          <FormLabel>{label}</FormLabel>\n          <FormControl>{children}</FormControl>\n          {description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  )\n} ","import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n","import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n        outline:\n          'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n        secondary: 'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n        sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n        lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n        icon: 'size-9',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : 'button'\n\n  return <Comp data-slot=\"button\" className={cn(buttonVariants({ variant, size, className }))} {...props} />\n}\n\nexport { Button, buttonVariants }\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { updateLoyaltyProgram, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { KeypairSigner, publicKey } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst actionSchema = z.object({\n  name: z.string().min(1, 'Action name is required'),\n  points: z.number().min(0, 'Points must be positive'),\n})\n\nconst tierSchema = z.object({\n  name: z.string().min(1, 'Tier name is required'),\n  points: z.number().min(0, 'Points must be positive'),\n  rewards: z.array(z.string()).min(1, 'At least one reward is required'),\n})\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  pointsPerAction: z.array(actionSchema).min(1, 'At least one action is required'),\n  tiers: z.array(tierSchema).min(1, 'At least one tier is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface UpdateLoyaltyProgramResult {\n  signature: string\n}\n\ninterface UpdateLoyaltyProgramFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: UpdateLoyaltyProgramResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function UpdateLoyaltyProgramForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: UpdateLoyaltyProgramFormProps) {\n  const [updateResult, setUpdateResult] = useState<UpdateLoyaltyProgramResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      pointsPerAction: [\n        { name: '', points: 0 },\n      ],\n      tiers: [\n        { \n          name: '', \n          points: 0, \n          rewards: [''] \n        },\n      ],\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      // Format data for updateLoyaltyProgram\n      const updateData = {\n        collectionAddress: publicKey(data.collectionAddress),\n        programAuthority: context.programAuthority,\n        updateAuthority: signer,\n        newTiers: data.tiers.map(tier => ({\n          name: tier.name,\n          xpRequired: tier.points,\n          rewards: tier.rewards,\n        })),\n        newPointsPerAction: Object.fromEntries(\n          data.pointsPerAction.map(action => [action.name, action.points])\n        ),\n      }\n\n      const result = await updateLoyaltyProgram(context, updateData)\n      setUpdateResult(result)\n      onSuccess?.(result)\n      \n      // Reset form after successful update\n      form.reset({\n        collectionAddress: '',\n        pointsPerAction: [\n          { name: '', points: 0 },\n        ],\n        tiers: [\n          { \n            name: '', \n            points: 0, \n            rewards: [''] \n          },\n        ],\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while updating the loyalty program'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  const handleAddAction = () => {\n    const actions = form.getValues('pointsPerAction')\n    form.setValue('pointsPerAction', [...actions, { name: '', points: 0 }])\n  }\n\n  const handleRemoveAction = (index: number) => {\n    const actions = form.getValues('pointsPerAction')\n    if (actions.length > 1) {\n      form.setValue('pointsPerAction', actions.filter((_, i) => i !== index))\n    }\n  }\n\n  const handleAddTier = () => {\n    const tiers = form.getValues('tiers')\n    form.setValue('tiers', [\n      ...tiers,\n      { \n        name: '', \n        points: 0, \n        rewards: [''] \n      },\n    ])\n  }\n\n  const handleRemoveTier = (index: number) => {\n    const tiers = form.getValues('tiers')\n    if (tiers.length > 1) {\n      form.setValue('tiers', tiers.filter((_, i) => i !== index))\n    }\n  }\n\n  const handleAddReward = (tierIndex: number) => {\n    const tiers = form.getValues('tiers')\n    tiers[tierIndex].rewards.push('')\n    form.setValue('tiers', tiers)\n  }\n\n  const handleRemoveReward = (tierIndex: number, rewardIndex: number) => {\n    const tiers = form.getValues('tiers')\n    if (tiers[tierIndex].rewards.length > 1) {\n      tiers[tierIndex].rewards = tiers[tierIndex].rewards.filter((_, i) => i !== rewardIndex)\n      form.setValue('tiers', tiers)\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the program to update\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The unique address of your loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Points Configuration\"\n          description=\"Update points awarded for different actions\"\n        >\n          <div className=\"space-y-6\">\n            {form.watch('pointsPerAction').map((_, index) => (\n              <div key={index} className=\"flex items-end gap-4\">\n                <div className=\"flex-1\">\n                  <VerxioFormField\n                    form={form}\n                    name={`pointsPerAction.${index}.name`}\n                    label=\"Action Name\"\n                    description=\"Name of the action that earns points\"\n                  >\n                    <Input \n                      placeholder=\"e.g., purchase, review, referral\"\n                      onChange={(e) => {\n                        const actions = form.getValues('pointsPerAction')\n                        actions[index].name = e.target.value\n                        form.setValue('pointsPerAction', actions)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n                <div className=\"flex-1\">\n                  <VerxioFormField\n                    form={form}\n                    name={`pointsPerAction.${index}.points`}\n                    label=\"Points\"\n                    description=\"Points awarded for this action\"\n                  >\n                    <Input \n                      type=\"number\"\n                      min={0}\n                      placeholder=\"100\"\n                      onChange={(e) => {\n                        const actions = form.getValues('pointsPerAction')\n                        actions[index].points = parseInt(e.target.value) || 0\n                        form.setValue('pointsPerAction', actions)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n                {form.watch('pointsPerAction').length > 1 && (\n                  <Button\n                    type=\"button\"\n                    variant=\"destructive\"\n                    onClick={() => handleRemoveAction(index)}\n                  >\n                    Remove\n                  </Button>\n                )}\n              </div>\n            ))}\n            <Button type=\"button\" variant=\"outline\" onClick={handleAddAction}>\n              Add Action\n            </Button>\n          </div>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Tier Configuration\"\n          description=\"Configure loyalty program tiers and rewards\"\n        >\n          <div className=\"space-y-6\">\n            {form.watch('tiers').map((tier, tierIndex) => (\n              <div\n                key={tierIndex}\n                className=\"p-6 bg-gradient-to-br from-slate-50 to-slate-100 border border-slate-200 rounded-xl space-y-4\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center text-white font-bold text-sm\">\n                      {tierIndex + 1}\n                    </div>\n                    <h5 className=\"font-semibold\">Tier {tierIndex + 1}</h5>\n                  </div>\n                  {form.watch('tiers').length > 1 && (\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleRemoveTier(tierIndex)}\n                      className=\"text-red-500 hover:text-red-600 hover:bg-red-50\"\n                    >\n                      Remove Tier\n                    </Button>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <VerxioFormField\n                    form={form}\n                    name={`tiers.${tierIndex}.name`}\n                    label=\"Tier Name\"\n                    description=\"Name of the loyalty tier\"\n                  >\n                    <Input \n                      placeholder=\"e.g., Bronze\"\n                      onChange={(e) => {\n                        const tiers = form.getValues('tiers')\n                        tiers[tierIndex].name = e.target.value\n                        form.setValue('tiers', tiers)\n                      }}\n                    />\n                  </VerxioFormField>\n\n                  <VerxioFormField\n                    form={form}\n                    name={`tiers.${tierIndex}.points`}\n                    label=\"Required Points\"\n                    description=\"Points needed to reach this tier\"\n                  >\n                    <Input \n                      type=\"number\"\n                      min={0}\n                      placeholder=\"500\"\n                      onChange={(e) => {\n                        const tiers = form.getValues('tiers')\n                        tiers[tierIndex].points = parseInt(e.target.value) || 0\n                        form.setValue('tiers', tiers)\n                      }}\n                    />\n                  </VerxioFormField>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h6 className=\"font-medium\">Rewards</h6>\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleAddReward(tierIndex)}\n                    >\n                      Add Reward\n                    </Button>\n                  </div>\n\n                  {tier.rewards.map((_, rewardIndex) => (\n                    <div key={rewardIndex} className=\"flex items-end gap-4\">\n                      <div className=\"flex-1\">\n                        <VerxioFormField\n                          form={form}\n                          name={`tiers.${tierIndex}.rewards.${rewardIndex}`}\n                          label=\"\"\n                          description=\"Reward for this tier\"\n                        >\n                          <Input \n                            placeholder=\"e.g., 10% cashback\"\n                            onChange={(e) => {\n                              const tiers = form.getValues('tiers')\n                              tiers[tierIndex].rewards[rewardIndex] = e.target.value\n                              form.setValue('tiers', tiers)\n                            }}\n                          />\n                        </VerxioFormField>\n                      </div>\n                      {tier.rewards.length > 1 && (\n                        <Button\n                          type=\"button\"\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleRemoveReward(tierIndex, rewardIndex)}\n                          className=\"text-red-500 hover:text-red-600 hover:bg-red-50\"\n                        >\n                          Remove\n                        </Button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n            <Button type=\"button\" variant=\"outline\" onClick={handleAddTier}>\n              Add Tier\n            </Button>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Updating Program...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n                Update Program\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {updateResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Loyalty Program Updated Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <p><span className=\"font-medium\">Transaction Signature:</span></p>\n              <p className=\"font-mono text-sm break-all\">{updateResult.signature}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { issueLoyaltyPass, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { generateSigner, publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  recipientAddress: z.string().min(1, 'Recipient address is required'),\n  passName: z.string().min(1, 'Pass name is required'),\n  passMetadataUri: z.string().url('Must be a valid URL'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface IssueLoyaltyPassResult {\n  asset: KeypairSigner\n  signature: string\n}\n\ninterface IssueLoyaltyPassFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: IssueLoyaltyPassResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function IssueLoyaltyPassForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: IssueLoyaltyPassFormProps) {\n  const [issuedPass, setIssuedPass] = useState<IssueLoyaltyPassResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      recipientAddress: '',\n      passName: '',\n      passMetadataUri: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      // Format data for issueLoyaltyPass\n      const passData = {\n        collectionAddress: publicKey(data.collectionAddress),\n        recipient: publicKey(data.recipientAddress),\n        passName: data.passName,\n        passMetadataUri: data.passMetadataUri,\n        assetSigner: generateSigner(context.umi),\n        updateAuthority: signer,\n      }\n\n      const result = await issueLoyaltyPass(context, passData)\n      setIssuedPass(result)\n      onSuccess?.(result)\n      \n      // Reset form after successful issuance\n      form.reset()\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while issuing the loyalty pass'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the loyalty program collection\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Pass Details\"\n          description=\"Configure the new loyalty pass details\"\n        >\n          <div className=\"space-y-6\">\n            <VerxioFormField\n              form={form}\n              name=\"recipientAddress\"\n              label=\"Recipient Address\"\n              description=\"The wallet address that will receive the loyalty pass\"\n            >\n              <Input \n                placeholder=\"Enter the wallet address of the recipient\"\n                onChange={(e) => form.setValue('recipientAddress', e.target.value)}\n              />\n            </VerxioFormField>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <VerxioFormField\n                form={form}\n                name=\"passName\"\n                label=\"Pass Name\"\n                description=\"Name of the loyalty pass\"\n              >\n                <Input \n                  placeholder=\"e.g., Coffee Rewards Pass\"\n                  onChange={(e) => form.setValue('passName', e.target.value)}\n                />\n              </VerxioFormField>\n\n              <VerxioFormField\n                form={form}\n                name=\"passMetadataUri\"\n                label=\"Metadata URI\"\n                description=\"URI containing the pass metadata\"\n              >\n                <Input \n                  placeholder=\"https://arweave.net/...\"\n                  onChange={(e) => form.setValue('passMetadataUri', e.target.value)}\n                />\n              </VerxioFormField>\n            </div>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-violet-500 to-purple-500 hover:from-violet-600 hover:to-purple-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Issuing Pass...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n                </svg>\n                Issue Pass\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {issuedPass && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Pass Issued Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Transaction Details */}\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Transaction Signature:</span></p>\n                <p className=\"font-mono text-sm break-all\">{issuedPass.signature}</p>\n              </div>\n            </div>\n\n            {/* Pass Details */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Pass Details</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Pass Public Key:</span></p>\n                <p className=\"font-mono text-sm break-all\">{issuedPass.asset.publicKey}</p>\n              </div>\n            </div>\n\n            {/* Next Steps */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Next Steps</h3>\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <p className=\"text-blue-800\">\n                  Your loyalty pass has been issued successfully! You can now:\n                </p>\n                <ul className=\"mt-2 list-disc list-inside text-blue-700\">\n                  <li>View pass details using the GetAssetData</li>\n                  <li>Transfer the pass to another wallet if needed</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { approveTransfer, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  passAddress: z.string().min(1, 'Pass address is required'),\n  newOwner: z.string().min(1, 'New owner address is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface ApproveTransferFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: () => void\n  onError?: (error: Error) => void\n}\n\nexport default function ApproveTransferForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: ApproveTransferFormProps) {\n  const [isSuccess, setIsSuccess] = useState(false)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      passAddress: '',\n      newOwner: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      await approveTransfer(context, publicKey(data.passAddress), publicKey(data.newOwner))\n      setIsSuccess(true)\n      onSuccess?.()\n      \n      // Reset form after successful transfer\n      form.reset()\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while approving the transfer'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Transfer Information\"\n          description=\"Enter the details of the loyalty pass transfer\"\n        >\n          <div className=\"space-y-6\">\n            <VerxioFormField\n              form={form}\n              name=\"passAddress\"\n              label=\"Pass Address\"\n              description=\"The unique address of the loyalty pass being transferred\"\n            >\n              <Input \n                placeholder=\"Enter the loyalty pass address to transfer\"\n                onChange={(e) => form.setValue('passAddress', e.target.value)}\n              />\n            </VerxioFormField>\n\n            <VerxioFormField\n              form={form}\n              name=\"newOwner\"\n              label=\"New Owner Address\"\n              description=\"The wallet address that will receive the loyalty pass\"\n            >\n              <Input \n                placeholder=\"Enter the new owner's wallet address\"\n                onChange={(e) => form.setValue('newOwner', e.target.value)}\n              />\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-emerald-500 to-green-500 hover:from-emerald-600 hover:to-green-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Approving Transfer...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                Approve Transfer\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {isSuccess && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Transfer Approved Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { sendMessage, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  passAddress: z.string().min(1, 'Pass address is required'),\n  message: z.string()\n    .min(1, 'Message content is required')\n    .max(500, 'Message content must be less than 500 characters'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface MessageResult {\n  signature: string\n}\n\ninterface MessagingFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: MessageResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function MessagingForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: MessagingFormProps) {\n  const [messageResult, setMessageResult] = useState<MessageResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      passAddress: '',\n      message: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n      context.collectionAddress = publicKey(data.collectionAddress)\n      // Format data for sendMessage\n      const messageData = {\n        passAddress: publicKey(data.passAddress),\n        message: data.message,\n        sender: context.programAuthority,\n        signer,\n      }\n\n      const result = await sendMessage(context, messageData)\n      setMessageResult(result)\n      onSuccess?.(result)\n      \n      // Reset form after successful sending\n      form.reset({\n        collectionAddress: '',\n        passAddress: '',\n        message: '',\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while sending the message'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the program and pass for the message\"\n        >\n          <div className=\"space-y-6\">\n            <VerxioFormField\n              form={form}\n              name=\"collectionAddress\"\n              label=\"Collection Address\"\n              description=\"The address of the loyalty program collection\"\n            >\n              <Input \n                placeholder=\"Enter the collection address\"\n                onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n              />\n            </VerxioFormField>\n\n            <VerxioFormField\n              form={form}\n              name=\"passAddress\"\n              label=\"Pass Address\"\n              description=\"The address of the loyalty pass\"\n            >\n              <Input \n                placeholder=\"Enter the loyalty pass address\"\n                onChange={(e) => form.setValue('passAddress', e.target.value)}\n              />\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Message Details\"\n          description=\"Compose your message to the pass holder\"\n        >\n          <div className=\"space-y-6\">\n            <VerxioFormField\n              form={form}\n              name=\"message\"\n              label=\"Message Content\"\n              description=\"Maximum 500 characters. Be clear and engaging.\"\n            >\n              <textarea\n                className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                placeholder=\"Enter your message content here...\"\n                value={form.watch('message')}\n                onChange={(e) => form.setValue('message', e.target.value)}\n                rows={6}\n                maxLength={500}\n              />\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-indigo-500 to-blue-500 hover:from-indigo-600 hover:to-blue-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Sending Message...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                </svg>\n                Send Message\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {messageResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Message Sent Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <p><span className=\"font-medium\">Transaction Signature:</span></p>\n              <p className=\"font-mono text-sm break-all\">{messageResult.signature}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { revokeLoyaltyPoints, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  passAddress: z.string().min(1, 'Pass address is required'),\n  pointsToRevoke: z.number().min(1, 'Points must be at least 1'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface RevokeLoyaltyPointsResult {\n  points: number\n  signature: string\n  newTier: {\n    name: string\n    xpRequired: number\n    rewards: string[]\n  }\n}\n\ninterface RevokeLoyaltyPointsFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: RevokeLoyaltyPointsResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function RevokeLoyaltyPointsForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: RevokeLoyaltyPointsFormProps) {\n  const [revokeResult, setRevokeResult] = useState<RevokeLoyaltyPointsResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      passAddress: '',\n      pointsToRevoke: 0,\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      context.collectionAddress = publicKey(data.collectionAddress)\n\n      // Format data for revokeLoyaltyPoints\n      const revokeData = {\n        passAddress: publicKey(data.passAddress),\n        pointsToRevoke: data.pointsToRevoke,\n        signer,\n      }\n\n      const result = await revokeLoyaltyPoints(context, revokeData)\n      setRevokeResult(result)\n      onSuccess?.(result)\n      // Reset form after successful revoking\n      form.reset({\n        collectionAddress: '',\n        passAddress: '',\n        pointsToRevoke: 0,\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while revoking points'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the loyalty program collection\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Pass Information\"\n          description=\"Specify the loyalty pass to revoke points from\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"passAddress\"\n            label=\"Pass Address\"\n            description=\"The unique address of the loyalty pass\"\n          >\n            <Input \n              placeholder=\"Enter the loyalty pass address\"\n              onChange={(e) => form.setValue('passAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Revocation Details\"\n          description=\"Configure the amount of points to revoke\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"pointsToRevoke\"\n            label=\"Points to Revoke\"\n            description=\"Number of points to remove from the user\"\n          >\n            <Input \n              type=\"number\" \n              min={1}\n              placeholder=\"Enter number of points\"\n              onChange={(e) => form.setValue('pointsToRevoke', parseInt(e.target.value) || 0)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Revoking Points...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                Revoke Points\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {revokeResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Points Revoked Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Transaction Details */}\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Transaction Signature:</span></p>\n                <p className=\"font-mono text-sm break-all\">{revokeResult.signature}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { giftLoyaltyPoints, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  passAddress: z.string().min(1, 'Pass address is required'),\n  pointsToGift: z.number().min(1, 'Points must be at least 1'),\n  action: z.string().min(1, 'Action name is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface GiftLoyaltyPointsResult {\n  points: number\n  signature: string\n  newTier: {\n    name: string\n    xpRequired: number\n    rewards: string[]\n  }\n}\n\ninterface GiftLoyaltyPointsFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: GiftLoyaltyPointsResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function GiftLoyaltyPointsForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: GiftLoyaltyPointsFormProps) {\n  const [giftResult, setGiftResult] = useState<GiftLoyaltyPointsResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      passAddress: '',\n      pointsToGift: 0,\n      action: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      context.collectionAddress = publicKey(data.collectionAddress)\n\n      // Format data for giftLoyaltyPoints\n      const giftData = {\n        passAddress: publicKey(data.passAddress),\n        pointsToGift: data.pointsToGift,\n        signer,\n        action: data.action,\n      }\n\n      const result = await giftLoyaltyPoints(context, giftData)\n      console.log('result', result)\n      setGiftResult(result)\n      onSuccess?.(result)\n      \n      // Reset form after successful gifting\n      form.reset({\n        collectionAddress: '',\n        passAddress: '',\n        pointsToGift: 0,\n        action: '',\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while gifting points'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the loyalty program collection\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Pass Information\"\n          description=\"Specify the loyalty pass to gift points to\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"passAddress\"\n            label=\"Pass Address\"\n            description=\"The unique address of the loyalty pass\"\n          >\n            <Input \n              placeholder=\"Enter the loyalty pass address\"\n              onChange={(e) => form.setValue('passAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Gift Details\"\n          description=\"Configure the gift amount and action\"\n        >\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <VerxioFormField\n              form={form}\n              name=\"pointsToGift\"\n              label=\"Points to Gift\"\n              description=\"Number of points to gift\"\n            >\n              <Input \n                type=\"number\" \n                min={1}\n                placeholder=\"Enter number of points\"\n                onChange={(e) => form.setValue('pointsToGift', parseInt(e.target.value) || 0)}\n              />\n            </VerxioFormField>\n\n            <VerxioFormField\n              form={form}\n              name=\"action\"\n              label=\"Action Name\"\n              description=\"Custom action name for the gift (e.g., birthday_bonus)\"\n            >\n              <Input \n                placeholder=\"e.g., birthday_bonus\" \n                onChange={(e) => form.setValue('action', e.target.value)}\n              />\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Gifting Points...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\"\n                  />\n                </svg>\n                Gift Points\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {giftResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Points Gifted Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Transaction Details */}\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Transaction Signature:</span></p>\n                <p className=\"font-mono text-sm break-all\">{giftResult.signature}</p>\n              </div>\n            </div>\n\n            {/* Points Details */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Points Details</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">New Total Points:</span> {giftResult.points}</p>\n                {giftResult.newTier && (\n                  <>\n                    <p><span className=\"font-medium\">New Tier:</span> {giftResult.newTier.name}</p>\n                    <p><span className=\"font-medium\">Tier XP Required:</span> {giftResult.newTier.xpRequired}</p>\n                    <div className=\"mt-2\">\n                      <p className=\"font-medium\">Tier Rewards:</p>\n                      <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                        {giftResult.newTier.rewards.map((reward, index) => (\n                          <li key={index}>{reward}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { getAssetData, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  passAddress: z.string().min(1, 'Pass address is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface AssetData {\n  xp: number\n  lastAction: string | null\n  actionHistory: any[]\n  currentTier: string\n  tierUpdatedAt: number\n  metadata: {\n    brandColor?: string\n    organizationName?: string\n  }\n  name: string\n  owner: string\n  pass: string\n  rewardTiers: Array<{\n    name: string\n    xpRequired: number\n    rewards: string[]\n  }>\n  rewards: string[]\n  uri: string\n  broadcasts: {\n    broadcasts: Array<{\n      content: string\n      id: string\n      read: boolean\n      sender: string\n      timestamp: number\n    }>\n    totalBroadcasts: number\n  }\n  messageHistory?: Array<{\n    content: string\n    id: string\n    read: boolean\n    sender: string\n    timestamp: number\n  }>\n}\n\ninterface GetAssetDataFormProps {\n  context: VerxioContext\n  onSuccess?: (result: AssetData) => void\n  onError?: (error: Error) => void\n}\n\nexport default function GetAssetDataForm({ \n  context,\n  onSuccess,\n  onError \n}: GetAssetDataFormProps) {\n  const [assetData, setAssetData] = useState<AssetData | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      passAddress: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      const result = await getAssetData(context, publicKey(data.passAddress))\n      setAssetData(result)\n      if (result) {\n        onSuccess?.(result)\n      }\n      // Reset form after successful fetching\n      form.reset()\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while fetching asset data'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Pass Information\"\n          description=\"Enter the loyalty pass address to fetch details\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"passAddress\"\n            label=\"Pass Address\"\n            description=\"The unique address of the loyalty pass\"\n          >\n            <Input \n              placeholder=\"Enter the loyalty pass address\"\n              onChange={(e) => form.setValue('passAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Fetching Data...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                Get Data\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Asset Data Display */}\n      {assetData && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">{assetData.name}</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Basic Information</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Organization:</span> {assetData.metadata.organizationName}</p>\n                <p><span className=\"font-medium\">Current XP:</span> {assetData.xp}</p>\n                <p><span className=\"font-medium\">Current Tier:</span> {assetData.currentTier}</p>\n                <p><span className=\"font-medium\">Brand Color:</span> \n                  <span className=\"inline-block w-4 h-4 ml-2 rounded-full\" style={{ backgroundColor: assetData.metadata.brandColor }}></span>\n                </p>\n              </div>\n            </div>\n\n            {/* Owner Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Owner Information</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Owner Address:</span></p>\n                <p className=\"font-mono text-sm break-all\">{assetData.owner}</p>\n                <p><span className=\"font-medium\">Pass Address:</span></p>\n                <p className=\"font-mono text-sm break-all\">{assetData.pass}</p>\n              </div>\n            </div>\n\n            {/* Tier Information */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Available Tiers</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {assetData.rewardTiers.map((tier) => (\n                  <div key={tier.name} className=\"p-4 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-medium text-lg mb-2\">{tier.name}</h4>\n                    <p className=\"text-gray-600 mb-2\">Required XP: {tier.xpRequired}</p>\n                    <div className=\"space-y-1\">\n                      <p className=\"font-medium text-sm text-gray-700\">Rewards:</p>\n                      <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                        {tier.rewards.map((reward, index) => (\n                          <li key={index}>{reward}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Action History */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Action History</h3>\n              {assetData.actionHistory.length > 0 ? (\n                <div className=\"space-y-2\">\n                  {assetData.actionHistory.map((action, index) => (\n                    <div key={index} className=\"p-3 bg-gray-50 rounded-lg\">\n                      <p className=\"text-sm text-gray-600\">{action}</p>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-500 italic\">No actions recorded yet</p>\n              )}\n            </div>\n\n            {/* Last Action */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Last Action</h3>\n              <p className=\"text-gray-600\">\n                {assetData.lastAction ? (\n                  <span>{assetData.lastAction}</span>\n                ) : (\n                  <span className=\"italic\">No actions performed yet</span>\n                )}\n              </p>\n            </div>\n\n            {/* Broadcasts */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Broadcasts</h3>\n              <div className=\"space-y-4\">\n                {assetData.broadcasts.broadcasts.map((broadcast) => (\n                  <div key={broadcast.id} className=\"p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"space-y-2\">\n                        <p className=\"text-gray-900\">{broadcast.content}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          From: {broadcast.sender}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(broadcast.timestamp).toLocaleString()}\n                        </p>\n                      </div>\n                      {!broadcast.read && (\n                        <span className=\"px-2 py-1 text-xs font-medium text-blue-800 bg-blue-100 rounded-full\">\n                          New\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {assetData.broadcasts.broadcasts.length === 0 && (\n                  <p className=\"text-gray-500 text-center py-4\">No broadcasts yet</p>\n                )}\n              </div>\n            </div>\n\n            {/* Message History */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Message History</h3>\n              <div className=\"space-y-4\">\n                {assetData.messageHistory?.map((message) => (\n                  <div key={message.id} className=\"p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"space-y-2\">\n                        <p className=\"text-gray-900\">{message.content}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          From: {message.sender}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(message.timestamp).toLocaleString()}\n                        </p>\n                      </div>\n                      {!message.read && (\n                        <span className=\"px-2 py-1 text-xs font-medium text-blue-800 bg-blue-100 rounded-full\">\n                          New\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {assetData.messageHistory?.length === 0 && (\n                  <p className=\"text-gray-500 text-center py-4\">No messages yet</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { getProgramDetails, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface ProgramDetails {\n  name: string\n  uri: string\n  collectionAddress: string\n  updateAuthority: string\n  numMinted: number\n  creator: string\n  metadata: {\n    brandColor?: string\n    organizationName?: string\n  }\n  pointsPerAction: Record<string, number>\n  tiers: Array<{\n    name: string\n    xpRequired: number\n    rewards: string[]\n  }>\n  transferAuthority: string\n  broadcasts: {\n    broadcasts: Array<{\n      content: string\n      id: string\n      read: boolean\n      sender: string\n      timestamp: number\n    }>\n    totalBroadcasts: number\n  }\n}\n\ninterface GetProgramDetailsFormProps {\n  context: VerxioContext\n  onSuccess?: (result: ProgramDetails) => void\n  onError?: (error: Error) => void\n}\n\nexport default function GetProgramDetailsForm({ \n  context,\n  onSuccess,\n  onError \n}: GetProgramDetailsFormProps) {\n  const [programDetails, setProgramDetails] = useState<ProgramDetails | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      context.collectionAddress = publicKey(data.collectionAddress)\n      const result = await getProgramDetails(context)\n      setProgramDetails(result)\n      onSuccess?.(result)\n\n      // Reset form after successful fetching\n      form.reset()\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while fetching program details'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Enter the collection address to fetch program details\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The unique address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Fetching Details...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n                Get Details\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Program Details Display */}\n      {programDetails && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">{programDetails.name}</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Basic Information</h3>\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Organization:</span> {programDetails.metadata.organizationName}</p>\n                <p><span className=\"font-medium\">Total Minted:</span> {programDetails.numMinted}</p>\n                <p><span className=\"font-medium\">Brand Color:</span> \n                  <span className=\"inline-block w-4 h-4 ml-2 rounded-full\" style={{ backgroundColor: programDetails.metadata.brandColor }}></span>\n                </p>\n              </div>\n            </div>\n\n            {/* Points Configuration */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Points Per Action</h3>\n              <div className=\"space-y-2\">\n                {Object.entries(programDetails.pointsPerAction).map(([action, points]) => (\n                  <p key={action}>\n                    <span className=\"font-medium capitalize\">{action}:</span> {points} points\n                  </p>\n                ))}\n              </div>\n            </div>\n\n            {/* Tiers */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Loyalty Tiers</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {programDetails.tiers.map((tier) => (\n                  <div key={tier.name} className=\"p-4 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-medium text-lg mb-2\">{tier.name}</h4>\n                    <p className=\"text-gray-600 mb-2\">Required XP: {tier.xpRequired}</p>\n                    <div className=\"space-y-1\">\n                      <p className=\"font-medium text-sm text-gray-700\">Rewards:</p>\n                      <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                        {tier.rewards.map((reward, index) => (\n                          <li key={index}>{reward}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Authority Information */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Authority Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Update Authority</p>\n                  <p className=\"font-mono text-sm\">{programDetails.updateAuthority}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">Transfer Authority</p>\n                  <p className=\"font-mono text-sm\">{programDetails.transferAuthority}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Broadcasts */}\n            <div className=\"md:col-span-2 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Broadcasts</h3>\n              <div className=\"space-y-4\">\n                {programDetails.broadcasts.broadcasts.map((broadcast) => (\n                  <div key={broadcast.id} className=\"p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"space-y-2\">\n                        <p className=\"text-gray-900\">{broadcast.content}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          From: {broadcast.sender}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(broadcast.timestamp).toLocaleString()}\n                        </p>\n                      </div>\n                      {!broadcast.read && (\n                        <span className=\"px-2 py-1 text-xs font-medium text-blue-800 bg-blue-100 rounded-full\">\n                          New\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {programDetails.broadcasts.broadcasts.length === 0 && (\n                  <p className=\"text-gray-500 text-center py-4\">No broadcasts yet</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { awardLoyaltyPoints, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  passAddress: z.string().min(1, 'Pass address is required'),\n  action: z.string().min(1, 'Action is required'),\n  multiplier: z.number().min(1).max(10).optional(),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface AwardLoyaltyPointsResult {\n  points: number\n  signature: string\n  newTier?: {\n    name: string\n    xpRequired: number\n    rewards: string[]\n  }\n}\n\ninterface AwardLoyaltyPointsFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: AwardLoyaltyPointsResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function AwardLoyaltyPointsForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: AwardLoyaltyPointsFormProps) {\n  const [awardResult, setAwardResult] = useState<AwardLoyaltyPointsResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      passAddress: '',\n      action: 'purchase',\n      multiplier: 1,\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n      context.collectionAddress = publicKey(data.collectionAddress)\n      // Format data for awardLoyaltyPoints\n      const awardData = {\n        passAddress: publicKey(data.passAddress),\n        action: data.action,\n        signer,\n        multiplier: data.multiplier,\n      }\n      const result = await awardLoyaltyPoints(context, awardData)\n      setAwardResult(result)\n      onSuccess?.(result)\n      // Reset form after successful awarding\n      form.reset({\n        collectionAddress: '',\n        passAddress: '',\n        action: 'purchase',\n        multiplier: 1,\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while awarding points'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the loyalty program collection\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Pass Information\"\n          description=\"Specify the loyalty pass to award points to\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"passAddress\"\n            label=\"Pass Address\"\n            description=\"The unique address of the loyalty pass\"\n          >\n            <Input \n              placeholder=\"Enter the loyalty pass address\"\n              onChange={(e) => form.setValue('passAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Action Details\"\n          description=\"Configure the action and points multiplier\"\n        >\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <VerxioFormField\n              form={form}\n              name=\"action\"\n              label=\"Action Type\"\n              description=\"Enter the action that triggers the reward\"\n            >\n              <Input \n                placeholder=\"e.g., purchase, review, referral\"\n                onChange={(e) => form.setValue('action', e.target.value)}\n              />\n            </VerxioFormField>\n\n            <VerxioFormField\n              form={form}\n              name=\"multiplier\"\n              label=\"Points Multiplier\"\n              description=\"Multiply the base points by this factor (1-10)\"\n            >\n              <Input \n                type=\"number\" \n                min={1} \n                max={10}\n                placeholder=\"1\"\n                onChange={(e) => form.setValue('multiplier', parseInt(e.target.value) || 1)}\n              />\n            </VerxioFormField>\n          </div>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Awarding Points...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n                Award Points\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {awardResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Points Awarded Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Transaction Details */}\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <p><span className=\"font-medium\">Transaction Signature:</span></p>\n                <p className=\"font-mono text-sm break-all\">{awardResult.signature}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport * as z from 'zod'\nimport { sendBroadcast, VerxioContext } from '@verxioprotocol/core'\nimport { VerxioForm } from './base/VerxioForm'\nimport { VerxioFormSection } from './base/VerxioFormSection'\nimport { VerxioFormField } from './base/VerxioFormField'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { publicKey, KeypairSigner } from '@metaplex-foundation/umi'\nimport { useState } from 'react'\n\nconst formSchema = z.object({\n  collectionAddress: z.string().min(1, 'Collection address is required'),\n  message: z.string()\n    .min(1, 'Message is required')\n    .max(500, 'Message must be less than 500 characters'),\n})\n\ntype FormData = z.infer<typeof formSchema>\n\ninterface BroadcastResult {\n  signature: string\n}\n\ninterface BroadcastsFormProps {\n  context: VerxioContext\n  signer: KeypairSigner\n  onSuccess?: (result: BroadcastResult) => void\n  onError?: (error: Error) => void\n}\n\nexport default function BroadcastsForm({ \n  context,\n  signer,\n  onSuccess,\n  onError \n}: BroadcastsFormProps) {\n  const [broadcastResult, setBroadcastResult] = useState<BroadcastResult | null>(null)\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      collectionAddress: '',\n      message: '',\n    },\n  })\n\n  const onSubmit = async (data: FormData) => {\n    try {\n      // Debug form validation\n      const validationResult = formSchema.safeParse(data)\n      if (!validationResult.success) {\n        console.error('Validation errors:', validationResult.error.format())\n        form.setError('root', { \n          message: 'Please check all required fields are filled correctly' \n        })\n        return\n      }\n\n      // Format data for sendBroadcast\n      const broadcastData = {\n        collectionAddress: publicKey(data.collectionAddress),\n        message: data.message,\n        sender: context.programAuthority,\n        signer,\n      }\n\n      const result = await sendBroadcast(context, broadcastData)\n      setBroadcastResult(result)\n      onSuccess?.(result)\n      // Reset form after successful broadcast\n      form.reset({\n        collectionAddress: '',\n        message: '',\n      })\n    } catch (error) {\n      console.error(error)\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred while sending the broadcast'\n      form.setError('root', { message: errorMessage })\n      onError?.(error instanceof Error ? error : new Error(errorMessage))\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <VerxioForm form={form} onSubmit={onSubmit} className=\"space-y-8\">\n        <VerxioFormSection\n          title=\"Program Information\"\n          description=\"Specify the program for the broadcast\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"collectionAddress\"\n            label=\"Collection Address\"\n            description=\"The address of the loyalty program collection\"\n          >\n            <Input \n              placeholder=\"Enter the collection address\"\n              onChange={(e) => form.setValue('collectionAddress', e.target.value)}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <VerxioFormSection\n          title=\"Broadcast Message\"\n          description=\"Compose your message to all pass holders\"\n        >\n          <VerxioFormField\n            form={form}\n            name=\"message\"\n            label=\"Message Content\"\n            description=\"The message to broadcast to all pass holders (max 500 characters)\"\n          >\n            <textarea\n              className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n              placeholder=\"Enter your broadcast message...\"\n              value={form.watch('message')}\n              onChange={(e) => form.setValue('message', e.target.value)}\n              maxLength={500}\n            />\n          </VerxioFormField>\n        </VerxioFormSection>\n\n        <div className=\"flex justify-center pt-8\">\n          <Button \n            type=\"submit\" \n            disabled={form.formState.isSubmitting}\n            className=\"px-12 py-4 text-lg font-bold bg-gradient-to-r from-sky-500 to-blue-500 hover:from-sky-600 hover:to-blue-600\"\n          >\n            {form.formState.isSubmitting ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Sending Broadcast...\n              </>\n            ) : (\n              <>\n                <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z\" />\n                </svg>\n                Send Broadcast\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Error Display */}\n        {form.formState.errors.root && (\n          <div className=\"rounded-lg bg-red-50 p-4 mt-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {form.formState.errors.root.message}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </VerxioForm>\n\n      {/* Transaction Result Display */}\n      {broadcastResult && (\n        <div className=\"mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Broadcast Sent Successfully!</h2>\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\n              Transaction Confirmed\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <p><span className=\"font-medium\">Transaction Signature:</span></p>\n              <p className=\"font-mono text-sm break-all\">{broadcastResult.signature}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current',\n  {\n    variants: {\n      variant: {\n        default: 'bg-card text-card-foreground',\n        destructive:\n          'text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90',\n        warning:\n          'text-yellow-500 bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-yellow-500/90 border-yellow-500 dark:bg-yellow-900/10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nfunction Alert({ className, variant, ...props }: React.ComponentProps<'div'> & VariantProps<typeof alertVariants>) {\n  return <div data-slot=\"alert\" role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn('col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight', className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        'text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"]}